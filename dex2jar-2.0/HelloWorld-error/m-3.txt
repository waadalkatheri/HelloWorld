Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;.checkRtl(Ljava/lang/CharSequence;II)I
java.lang.RuntimeException: can not merge I and Z
	at com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.e1expr(TypeTransformer.java:496)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:713)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)
	at com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)
	at com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)
	at com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)
	at com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)
	at com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)
	at com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)
	at com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)
	at com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)
	at com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)
	at com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)
	at com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)
	at com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)


.method public checkRtl(Ljava/lang/CharSequence;II)I
    .registers 9
    const/4 v0, 0
    move v1, p2
    add-int v2, p2, p3
    :L0
    if-ge v1, v2, :L6
    invoke-interface { p1, v1 }, Ljava/lang/CharSequence;->charAt(I)C
    move-result v3
    invoke-static { v3 }, Ljava/lang/Character;->getDirectionality(C)B
    move-result v3
    invoke-static { v3 }, Landroidx/core/text/TextDirectionHeuristicsCompat;->isRtlText(I)I
    move-result v3
    if-eqz v3, :L3
    const/4 v4, 1
    if-eq v3, v4, :L1
    goto :L5
    :L1
    iget-boolean v3, p0, Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;->mLookForRtl:Z
    if-nez v3, :L2
    return v4
    :L2
    const/4 v0, 1
    goto :L5
    :L3
    iget-boolean v3, p0, Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;->mLookForRtl:Z
    if-eqz v3, :L4
    const/4 v3, 0
    return v3
    :L4
    const/4 v0, 1
    nop
    :L5
    add-int/lit8 v1, v1, 1
    goto :L0
    :L6
    if-eqz v0, :L7
    iget-boolean v1, p0, Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;->mLookForRtl:Z
    return v1
    :L7
    const/4 v1, 2
    return v1
.end method
